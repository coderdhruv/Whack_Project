{"ast":null,"code":"import * as React from 'react';\nimport { matchPath } from 'react-router';\nimport { db } from './config';\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shelf_list: {},\n      graph: {},\n      nodes: {},\n      shelf_num_from_coord: {}\n    };\n  }\n\n  componentDidMount() {\n    var shelf_list = {};\n    var graph = {};\n    var nodes = {};\n    shelf_list[1] = [297, 322];\n    shelf_list[2] = [398, 322];\n    shelf_list[3] = [497, 321];\n    shelf_list[4] = [596, 322];\n    shelf_list[5] = [595, 42];\n    shelf_list[6] = [496, 41];\n    shelf_list[7] = [398, 41];\n    shelf_list[8] = [298, 41];\n    shelf_list[9] = [852, 321];\n    shelf_list[10] = [955, 322];\n    shelf_list[11] = [1058, 323];\n    shelf_list[12] = [1164, 323];\n    shelf_list[13] = [1152, 42];\n    shelf_list[14] = [1058, 41];\n    shelf_list[15] = [960, 42];\n    shelf_list[16] = [857, 42];\n    shelf_list[17] = [295, 602];\n    shelf_list[18] = [394, 601];\n    shelf_list[19] = [496, 601];\n    shelf_list[20] = [595, 603];\n    shelf_list[21] = [596, 322];\n    shelf_list[22] = [497, 321];\n    shelf_list[23] = [398, 322];\n    shelf_list[24] = [297, 323];\n    shelf_list[25] = [859, 601];\n    shelf_list[26] = [961, 601];\n    shelf_list[27] = [1061, 601];\n    shelf_list[28] = [1157, 602];\n    shelf_list[29] = [1164, 323];\n    shelf_list[30] = [1058, 323];\n    shelf_list[31] = [955, 322];\n    shelf_list[32] = [852, 321];\n    shelf_list[33] = [291, 882];\n    shelf_list[34] = [394, 881];\n    shelf_list[35] = [500, 883];\n    shelf_list[36] = [606, 880];\n    shelf_list[37] = [595, 603];\n    shelf_list[38] = [496, 601];\n    shelf_list[39] = [394, 601];\n    shelf_list[40] = [295, 602];\n    shelf_list[41] = [859, 882];\n    shelf_list[42] = [961, 883];\n    shelf_list[43] = [1057, 882];\n    shelf_list[44] = [1161, 881];\n    shelf_list[45] = [1157, 602];\n    shelf_list[46] = [1061, 601];\n    shelf_list[47] = [961, 601];\n    shelf_list[48] = [859, 601];\n    nodes[49] = [859, 601];\n    nodes[50] = [730, 881];\n    nodes[51] = [1310, 880];\n    nodes[52] = [1312, 602];\n    nodes[53] = [731, 601];\n    nodes[54] = [152, 602];\n    nodes[55] = [152, 321];\n    nodes[56] = [731, 321];\n    nodes[57] = [1312, 322];\n    nodes[58] = [1310, 41];\n    nodes[59] = [731, 42];\n    nodes[60] = [151, 42];\n    graph[1] = [297, 322];\n    graph[2] = [398, 322];\n    graph[3] = [497, 321];\n    graph[4] = [596, 322];\n    graph[5] = [595, 42];\n    graph[6] = [496, 41];\n    graph[7] = [398, 41];\n    graph[8] = [298, 41];\n    graph[9] = [852, 321];\n    graph[10] = [955, 322];\n    graph[11] = [1058, 323];\n    graph[12] = [1164, 323];\n    graph[13] = [1152, 42];\n    graph[14] = [1058, 41];\n    graph[15] = [960, 42];\n    graph[16] = [857, 42];\n    graph[17] = [295, 602];\n    graph[18] = [394, 601];\n    graph[19] = [496, 601];\n    graph[20] = [595, 603];\n    graph[21] = [596, 322];\n    graph[22] = [497, 321];\n    graph[23] = [398, 322];\n    graph[24] = [297, 323];\n    graph[25] = [859, 601];\n    graph[26] = [961, 601];\n    graph[27] = [1061, 601];\n    graph[28] = [1157, 602];\n    graph[29] = [1164, 323];\n    graph[30] = [1058, 323];\n    graph[31] = [955, 322];\n    graph[32] = [852, 321];\n    graph[33] = [291, 882];\n    graph[34] = [394, 881];\n    graph[35] = [500, 883];\n    graph[36] = [606, 880];\n    graph[37] = [595, 603];\n    graph[38] = [496, 601];\n    graph[39] = [394, 601];\n    graph[40] = [295, 602];\n    graph[41] = [859, 882];\n    graph[42] = [961, 883];\n    graph[43] = [1057, 882];\n    graph[44] = [1161, 881];\n    graph[45] = [1157, 602];\n    graph[46] = [1061, 601];\n    graph[47] = [961, 601];\n    graph[48] = [859, 601];\n    graph[49] = [150, 881];\n    graph[50] = [730, 881];\n    graph[51] = [1310, 880];\n    graph[52] = [1312, 602];\n    graph[53] = [731, 601];\n    graph[54] = [152, 602];\n    graph[55] = [152, 321];\n    graph[56] = [731, 321];\n    graph[57] = [1312, 322];\n    graph[58] = [1310, 41];\n    graph[59] = [731, 42];\n    graph[60] = [151, 42];\n    this.setState({\n      shelf_list: shelf_list\n    });\n    this.setState({\n      nodes: nodes\n    });\n    this.setState({\n      graph: graph\n    });\n    var shelf_num_from_coord = {};\n\n    for (let key in shelf_list) {\n      shelf_num_from_coord[shelf_list[key]] = key;\n    }\n\n    this.setState({\n      shelf_num_from_coord: shelf_num_from_coord\n    });\n    console.log(this.state.shelf_num_from_coord);\n  }\n\n  dist_bet_nodes(x, y) {\n    return Math.sqrt(Math.abs(x[0] - y[0]) * Math.abs(x[1] - y[1]) + Math.abs(x[1] - y[1]) * Math.abs(x[1] - y[1]));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/dhruv/Desktop/Walmart/WalmartProj/src/Graph.js"],"names":["React","matchPath","db","Graph","Component","constructor","props","state","shelf_list","graph","nodes","shelf_num_from_coord","componentDidMount","setState","key","console","log","dist_bet_nodes","x","y","Math","sqrt","abs"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { matchPath } from 'react-router';\nimport {db} from './config';\n\nclass Graph extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            shelf_list : {},\n            graph : {},\n            nodes : {},\n            shelf_num_from_coord : {}\n        };\n    }\n    componentDidMount(){\n        var shelf_list = {}\n        var graph = {}\n        var nodes = {}\n        shelf_list[1] = [297,322]\n        shelf_list[2] = [ 398, 322 ]\n        shelf_list[3] = [ 497, 321 ]\n        shelf_list[4] = [ 596, 322 ]\n        shelf_list[5] = [ 595, 42 ]\n        shelf_list[6] = [ 496, 41 ]\n        shelf_list[7] = [ 398, 41 ]\n        shelf_list[8] = [ 298, 41 ]\n        shelf_list[9] = [ 852, 321 ]\n        shelf_list[10] = [ 955, 322 ]\n        shelf_list[11] = [ 1058, 323 ]\n        shelf_list[12] = [ 1164, 323 ]\n        shelf_list[13] = [ 1152, 42 ]\n        shelf_list[14] = [ 1058, 41 ]\n        shelf_list[15] = [ 960, 42 ]\n        shelf_list[16] = [ 857, 42 ]\n        shelf_list[17] = [ 295, 602 ]\n        shelf_list[18] = [ 394, 601 ]\n        shelf_list[19] = [ 496, 601 ]\n        shelf_list[20] = [ 595, 603 ]\n        shelf_list[21] = [ 596, 322 ]\n        shelf_list[22] = [ 497, 321 ]\n        shelf_list[23] = [ 398, 322 ]\n        shelf_list[24] = [ 297, 323 ]\n        shelf_list[25] = [ 859, 601 ]\n        shelf_list[26] = [ 961, 601 ]\n        shelf_list[27] = [ 1061, 601 ]\n        shelf_list[28] = [ 1157, 602 ]\n        shelf_list[29] = [ 1164, 323 ]\n        shelf_list[30] = [ 1058, 323 ]\n        shelf_list[31] = [ 955, 322 ]\n        shelf_list[32] = [ 852, 321 ]\n        shelf_list[33] = [ 291, 882 ]\n        shelf_list[34] = [ 394, 881 ]\n        shelf_list[35] = [ 500, 883 ]\n        shelf_list[36] = [ 606, 880 ]\n        shelf_list[37] = [ 595, 603 ]\n        shelf_list[38] = [ 496, 601 ]\n        shelf_list[39] = [ 394, 601 ]\n        shelf_list[40] = [ 295, 602 ]\n        shelf_list[41] = [ 859, 882 ]\n        shelf_list[42] = [ 961, 883 ]\n        shelf_list[43] = [ 1057, 882 ]\n        shelf_list[44] = [ 1161, 881 ]\n        shelf_list[45] = [ 1157, 602 ]\n        shelf_list[46] = [ 1061, 601 ]\n        shelf_list[47] = [ 961, 601 ]\n        shelf_list[48] = [ 859, 601 ]\n        nodes[49] = [ 859, 601 ]\n        nodes[50] = [ 730, 881 ]\n        nodes[51] = [ 1310, 880 ]\n        nodes[52] = [ 1312, 602 ]\n        nodes[53] = [ 731, 601 ]\n        nodes[54] = [ 152, 602 ]\n        nodes[55] = [ 152, 321 ]\n        nodes[56] = [ 731, 321 ]\n        nodes[57] = [ 1312, 322 ]\n        nodes[58] = [ 1310, 41 ]\n        nodes[59] = [ 731, 42 ]\n        nodes[60] = [ 151, 42 ] \n        graph[1] = [297,322]\n        graph[2] = [ 398, 322 ]\n        graph[3] = [ 497, 321 ]\n        graph[4] = [ 596, 322 ]\n        graph[5] = [ 595, 42 ]\n        graph[6] = [ 496, 41 ]\n        graph[7] = [ 398, 41 ]\n        graph[8] = [ 298, 41 ]\n        graph[9] = [ 852, 321 ]\n        graph[10] = [ 955, 322 ]\n        graph[11] = [ 1058, 323 ]\n        graph[12] = [ 1164, 323 ]\n        graph[13] = [ 1152, 42 ]\n        graph[14] = [ 1058, 41 ]\n        graph[15] = [ 960, 42 ]\n        graph[16] = [ 857, 42 ]\n        graph[17] = [ 295, 602 ]\n        graph[18] = [ 394, 601 ]\n        graph[19] = [ 496, 601 ]\n        graph[20] = [ 595, 603 ]\n        graph[21] = [ 596, 322 ]\n        graph[22] = [ 497, 321 ]\n        graph[23] = [ 398, 322 ]\n        graph[24] = [ 297, 323 ]\n        graph[25] = [ 859, 601 ]\n        graph[26] = [ 961, 601 ]\n        graph[27] = [ 1061, 601 ]\n        graph[28] = [ 1157, 602 ]\n        graph[29] = [ 1164, 323 ]\n        graph[30] = [ 1058, 323 ]\n        graph[31] = [ 955, 322 ]\n        graph[32] = [ 852, 321 ]\n        graph[33] = [ 291, 882 ]\n        graph[34] = [ 394, 881 ]\n        graph[35] = [ 500, 883 ]\n        graph[36] = [ 606, 880 ]\n        graph[37] = [ 595, 603 ]\n        graph[38] = [ 496, 601 ]\n        graph[39] = [ 394, 601 ]\n        graph[40] = [ 295, 602 ]\n        graph[41] = [ 859, 882 ]\n        graph[42] = [ 961, 883 ]\n        graph[43] = [ 1057, 882 ]\n        graph[44] = [ 1161, 881 ]\n        graph[45] = [ 1157, 602 ]\n        graph[46] = [ 1061, 601 ]\n        graph[47] = [ 961, 601 ]\n        graph[48] = [ 859, 601 ]\n        graph[49] = [ 150, 881 ]\n        graph[50] = [ 730, 881 ]\n        graph[51] = [ 1310, 880 ]\n        graph[52] = [ 1312, 602 ]\n        graph[53] = [ 731, 601 ]\n        graph[54] = [ 152, 602 ]\n        graph[55] = [ 152, 321 ]\n        graph[56] = [ 731, 321 ]\n        graph[57] = [ 1312, 322 ]\n        graph[58] = [ 1310, 41 ]\n        graph[59] = [ 731, 42 ]\n        graph[60] = [ 151, 42 ] \n        this.setState({\n            shelf_list : shelf_list\n        })\n        this.setState({\n            nodes : nodes\n        })\n        this.setState({\n            graph : graph\n        })\n        var shelf_num_from_coord = {}\n        for(let key in shelf_list){\n            shelf_num_from_coord[shelf_list[key]] = key\n        }\n        this.setState({\n            shelf_num_from_coord : shelf_num_from_coord\n        })\n        console.log(this.state.shelf_num_from_coord)\n    }\n    dist_bet_nodes(x,y){\n        return Math.sqrt((((Math.abs(x[0]-y[0])*(Math.abs(x[1]-y[1])) + (Math.abs(x[1]-y[1])*(Math.abs(x[1]-y[1])))))));\n    }\n}\n\nexport default Graph"]},"metadata":{},"sourceType":"module"}