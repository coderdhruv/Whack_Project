{"ast":null,"code":"var _jsxFileName = \"/home/dhruv/Desktop/Walmart/whack-reactJS/src/Map.js\";\nimport * as React from 'react';\nimport { matchPath } from 'react-router';\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvas: null,\n      ctx: null\n    };\n  }\n\n  componentDidMount() {\n    // const canvasRef = React.useRef<HTMLCanvasElement>(null);\n    // const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.strokeRect(5, 5, 100, 100);\n\n    for (var i = 0; i < 3; i++) {\n      var x = 400;\n      var y = 290 * i + 60;\n      var size = 100;\n      var start_x = x;\n      var start_y = y;\n\n      for (var j = 0; j < 2; j++) {\n        for (var i = 0; i < 4; i++) {\n          var final_x = start_x + size;\n          var final_y = start_y + size;\n          ctx.strokeRect(start_x, start_y, size, size);\n          start_x = start_x + size;\n          console.log(\"new coordinates\");\n          console.log(start_y);\n          console.log(start_x);\n        }\n\n        start_x = x;\n        start_y = start_y + size;\n      }\n    } //const img = this.refs.image\n\n  } // componentDidUpdate(){\n  //     ctx.fillRect(5, 5, 100, 100);\n  // };\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: window.innerWidth,\n      height: window.innerHeight,\n      style: {\n        border: '2px solid #000',\n        marginTop: 10\n      },\n      onClick: e => {\n        alert(e.clientX + \",\" + e.clientY);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: matchPath.jpg,\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/dhruv/Desktop/Walmart/whack-reactJS/src/Map.js"],"names":["React","matchPath","Map","Component","constructor","props","state","canvas","ctx","componentDidMount","refs","getContext","strokeRect","i","x","y","size","start_x","start_y","j","final_x","final_y","console","log","render","window","innerWidth","innerHeight","border","marginTop","e","alert","clientX","clientY","jpg"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAC9BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,MAAM,EAAE,IAAT;AAAcC,MAAAA,GAAG,EAAC;AAAlB,KAAb;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACA,UAAMF,MAAM,GAAG,KAAKG,IAAL,CAAUH,MAAzB;AACA,UAAMC,GAAG,GAAGD,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACAH,IAAAA,GAAG,CAACI,UAAJ,CAAe,CAAf,EAAiB,CAAjB,EAAmB,GAAnB,EAAuB,GAAvB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAChB,UAAIC,CAAC,GAAG,GAAR;AACA,UAAIC,CAAC,GAAG,MAAIF,CAAJ,GAAQ,EAAhB;AACA,UAAIG,IAAI,GAAG,GAAX;AACA,UAAIC,OAAO,GAAGH,CAAd;AACA,UAAII,OAAO,GAAGH,CAAd;;AACA,WAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAChB,aAAI,IAAIN,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAChB,cAAIO,OAAO,GAAGH,OAAO,GAAGD,IAAxB;AACA,cAAIK,OAAO,GAAGH,OAAO,GAAGF,IAAxB;AACAR,UAAAA,GAAG,CAACI,UAAJ,CAAeK,OAAf,EAAuBC,OAAvB,EAA+BF,IAA/B,EAAoCA,IAApC;AACAC,UAAAA,OAAO,GAAGA,OAAO,GAAGD,IAApB;AACAM,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AACH;;AACDA,QAAAA,OAAO,GAAGH,CAAV;AACAI,QAAAA,OAAO,GAAGA,OAAO,GAAGF,IAApB;AACH;AACJ,KAzBe,CA2BhB;;AACH,GAjC6B,CAkC9B;AACA;AACA;;;AACAQ,EAAAA,MAAM,GAAG;AACL,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,GAAG,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAEC,MAAM,CAACC,UAAnC;AAA+C,MAAA,MAAM,EAAED,MAAM,CAACE,WAA9D;AAA2E,MAAA,KAAK,EAAE;AAClFC,QAAAA,MAAM,EAAE,gBAD0E;AAElFC,QAAAA,SAAS,EAAE;AAFuE,OAAlF;AAGG,MAAA,OAAO,EAAEC,CAAC,IAAI;AACbC,QAAAA,KAAK,CAACD,CAAC,CAACE,OAAF,GAAY,GAAZ,GAAkBF,CAAC,CAACG,OAArB,CAAL;AACD,OALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAOE;AAAK,MAAA,GAAG,EAAC,OAAT;AAAiB,MAAA,GAAG,EAAEhC,SAAS,CAACiC,GAAhC;AAAqC,MAAA,SAAS,EAAC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AAjD2B;;AAqDlC,eAAehC,GAAf","sourcesContent":["import * as React from 'react';\nimport { matchPath } from 'react-router';\n\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {canvas: null,ctx:null};\n    }\n    componentDidMount() {\n        // const canvasRef = React.useRef<HTMLCanvasElement>(null);\n        // const [context, setContext] = React.useState<CanvasRenderingContext2D | null>(null);\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        ctx.strokeRect(5,5,100,100)\n        for(var i=0;i<3;i++){\n            var x = 400;\n            var y = 290*i + 60;\n            var size = 100\n            var start_x = x;\n            var start_y = y;   \n            for(var j=0;j<2;j++){\n                for(var i=0;i<4;i++){\n                    var final_x = start_x + size;\n                    var final_y = start_y + size;\n                    ctx.strokeRect(start_x,start_y,size,size);\n                    start_x = start_x + size;\n                    console.log(\"new coordinates\");        \n                    console.log(start_y);\n                    console.log(start_x);\n                }\n                start_x = x;\n                start_y = start_y + size;\n            }\n        }\n        \n        //const img = this.refs.image\n    }\n    // componentDidUpdate(){\n    //     ctx.fillRect(5, 5, 100, 100);\n    // };\n    render() {\n        return(\n          <div>\n            <canvas ref=\"canvas\" width={window.innerWidth} height={window.innerHeight} style={{\n            border: '2px solid #000',\n            marginTop: 10,\n            }} onClick={e => {\n                alert(e.clientX + \",\" + e.clientY)\n              }}/>\n            <img ref=\"image\" src={matchPath.jpg} className=\"hidden\" />\n          </div>\n        )\n      }\n    }\n\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}