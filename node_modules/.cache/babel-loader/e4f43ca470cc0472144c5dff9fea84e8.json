{"ast":null,"code":"var _jsxFileName = \"/home/dhruv/Desktop/Walmart/WalmartProj/src/Map.js\";\nimport * as React from 'react';\nimport { matchPath } from 'react-router';\nconst list = [];\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvas: null,\n      ctx: null,\n      list: []\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.refs.canvas;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.strokeRect(5, 5, 100, 100);\n\n    for (var k = 0; k < 3; k++) {\n      var x = 400;\n      var y = 290 * k + 60;\n      var size = 100;\n      var start_x = x;\n      var start_y = y;\n\n      for (var j = 0; j < 2; j++) {\n        for (var i = 0; i < 4; i++) {\n          var final_x = start_x + size;\n          var final_y = start_y + size;\n          ctx.strokeRect(start_x, start_y, size, size);\n          start_x = start_x + size;\n          console.log(\"new coordinates\");\n          console.log(start_y);\n          console.log(start_x);\n        }\n\n        start_x = x;\n        start_y = start_y + size;\n      }\n    }\n\n    var x = 300;\n    var y = 30;\n    var n = 4;\n    var length = 580;\n    var gap = 280;\n\n    for (var i = 0; i < n; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + length, y);\n      y = y + gap;\n      ctx.strokeStyle = \"#FF0000\";\n      ctx.stroke();\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(300, 30);\n    ctx.lineTo(300, 30 + 280 * 3);\n    ctx.strokeStyle = \"#FF0000\";\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(300 + 580, 30);\n    ctx.lineTo(300 + 580, 30 + 280 * 3);\n    ctx.strokeStyle = \"#FF0000\";\n    ctx.stroke();\n    ctx.strokeStyle = \"#000000\"; //next set of paths\n\n    for (var k = 0; k < 3; k++) {\n      var x = 960;\n      var y = 290 * k + 60;\n      var size = 100;\n      var start_x = x;\n      var start_y = y;\n\n      for (var j = 0; j < 2; j++) {\n        for (var i = 0; i < 4; i++) {\n          var final_x = start_x + size;\n          var final_y = start_y + size;\n          ctx.strokeRect(start_x, start_y, size, size);\n          start_x = start_x + size;\n          console.log(\"new coordinates\");\n          console.log(start_y);\n          console.log(start_x);\n        }\n\n        start_x = x;\n        start_y = start_y + size;\n      }\n    }\n\n    var x = 880;\n    var y = 30;\n    var n = 4;\n    var length = 580;\n    var gap = 280;\n\n    for (var i = 0; i < n; i++) {\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n      ctx.lineTo(x + length, y);\n      y = y + gap;\n      ctx.strokeStyle = \"#FF0000\";\n      ctx.stroke();\n    }\n\n    ctx.beginPath();\n    ctx.moveTo(880, 30);\n    ctx.lineTo(880, 30 + 280 * 3);\n    ctx.strokeStyle = \"#FF0000\";\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(888 + 580, 30);\n    ctx.lineTo(880 + 580, 30 + 280 * 3);\n    ctx.strokeStyle = \"#FF0000\";\n    ctx.stroke();\n    x = 0;\n    y = 170;\n    size = 100;\n\n    for (var i = 0; i < 3; i++) {\n      ctx.moveTo(x, y);\n      ctx.strokeRect(x, y, size + 20, size);\n      y = y + 200;\n    }\n\n    ctx.strokeStyle = \"#000000\";\n    ctx.strokeRect(5, 750, 100, 100);\n  }\n\n  addToList(x, y) {\n    list.push([x, y]);\n    this.setState({\n      list: list\n    });\n    console.log(list);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      ref: \"canvas\",\n      width: window.innerWidth,\n      height: window.innerHeight,\n      style: {\n        border: '2px solid #000',\n        marginTop: 10\n      },\n      onClick: e => {\n        alert(e.clientX + \",\" + e.clientY);\n        {\n          this.addToList(e.clientX, e.clientY);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      ref: \"image\",\n      src: matchPath.jpg,\n      className: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/home/dhruv/Desktop/Walmart/WalmartProj/src/Map.js"],"names":["React","matchPath","list","Map","Component","constructor","props","state","canvas","ctx","componentDidMount","refs","getContext","strokeRect","k","x","y","size","start_x","start_y","j","i","final_x","final_y","console","log","n","length","gap","beginPath","moveTo","lineTo","strokeStyle","stroke","addToList","push","setState","render","window","innerWidth","innerHeight","border","marginTop","e","alert","clientX","clientY","jpg"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { matchPath } from 'react-router';\nconst list = []\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {canvas: null,ctx:null,list:[]};\n    }    \n    componentDidMount() {\n        const canvas = this.refs.canvas\n        const ctx = canvas.getContext(\"2d\")\n        ctx.strokeRect(5,5,100,100)\n        for(var k=0;k<3;k++){\n            var x = 400;\n            var y = 290*k + 60;\n            var size = 100\n            var start_x = x;\n            var start_y = y;   \n            for(var j=0;j<2;j++){\n                for(var i=0;i<4;i++){\n                    var final_x = start_x + size;\n                    var final_y = start_y + size;\n                    ctx.strokeRect(start_x,start_y,size,size);\n                    start_x = start_x + size;\n                    console.log(\"new coordinates\");        \n                    console.log(start_y);\n                    console.log(start_x);\n                }\n                start_x = x;\n                start_y = start_y + size;\n            }\n        }\n        var x = 300\n        var y = 30\n        var n = 4\n        var length = 580\n        var gap = 280     \n        for(var i=0;i<n;i++){\n            ctx.beginPath();\n            ctx.moveTo(x,y);\n            ctx.lineTo(x+length,y);\n            y = y + gap;\n            ctx.strokeStyle = \"#FF0000\";\n            ctx.stroke();\n        }        \n        ctx.beginPath();\n        ctx.moveTo(300,30);\n        ctx.lineTo(300,30+280*3);\n        ctx.strokeStyle = \"#FF0000\";\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(300+580,30);\n        ctx.lineTo(300+580,30+280*3);\n        ctx.strokeStyle = \"#FF0000\";\n        ctx.stroke();\n        ctx.strokeStyle = \"#000000\";\n        //next set of paths\n        for(var k=0;k<3;k++){\n            var x = 960;\n            var y = 290*k + 60;\n            var size = 100\n            var start_x = x;\n            var start_y = y;   \n            for(var j=0;j<2;j++){\n                for(var i=0;i<4;i++){\n                    var final_x = start_x + size;\n                    var final_y = start_y + size;\n                    ctx.strokeRect(start_x,start_y,size,size);\n                    start_x = start_x + size;\n                    console.log(\"new coordinates\");        \n                    console.log(start_y);\n                    console.log(start_x);\n                }\n                start_x = x;\n                start_y = start_y + size;\n            }\n        }\n        var x = 880\n        var y = 30\n        var n = 4\n        var length = 580\n        var gap = 280     \n        for(var i=0;i<n;i++){\n            ctx.beginPath();\n            ctx.moveTo(x,y);\n            ctx.lineTo(x+length,y);\n            y = y + gap;\n            ctx.strokeStyle = \"#FF0000\";\n            ctx.stroke();\n        }        \n        ctx.beginPath();\n        ctx.moveTo(880,30);\n        ctx.lineTo(880,30+280*3);\n        ctx.strokeStyle = \"#FF0000\";\n        ctx.stroke();\n        ctx.beginPath();\n        ctx.moveTo(888+580,30);\n        ctx.lineTo(880+580,30+280*3);\n        ctx.strokeStyle = \"#FF0000\";\n        ctx.stroke();\n        x = 0\n        y = 170\n        size = 100\n        for(var i=0;i<3;i++){\n            ctx.moveTo(x,y);\n            ctx.strokeRect(x,y,size+20,size);\n            y = y + 200;\n        }\n        ctx.strokeStyle = \"#000000\"\n        ctx.strokeRect(5,750,100,100)\n    }\n    addToList(x,y){\n        list.push([x,y]);\n        this.setState({\n            list : list\n        })\n        console.log(list);\n    }\n    render() {\n        return(\n          <div>\n            <canvas ref=\"canvas\" width={window.innerWidth} height={window.innerHeight} style={{\n            border: '2px solid #000',\n            marginTop: 10,\n            }} onClick={e => {\n                alert(e.clientX + \",\" + e.clientY)\n                {this.addToList(e.clientX,e.clientY)}\n              }}/>\n            <img ref=\"image\" src={matchPath.jpg} className=\"hidden\" />\n          </div>\n        )\n      }\n    }\n\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}